{"ast":null,"code":"import React,{useEffect,useState}from'react';import{motion,AnimatePresence}from'framer-motion';import api from'../api';import'./Leaderboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MEDALS=['ðŸ¥‡','ðŸ¥ˆ','ðŸ¥‰'];function Leaderboard(){const[teams,setTeams]=useState([]);const fetchTeams=async()=>{try{const res=await api.get('/teams');setTeams(res.data);}catch(err){console.error('Error fetching teams:',err);}};useEffect(()=>{fetchTeams();const interval=setInterval(fetchTeams,1000);// refresh every 10s\nreturn()=>clearInterval(interval);},[]);const sorted=[...teams].sort((a,b)=>b.points-a.points);return/*#__PURE__*/_jsxs(\"div\",{className:\"leaderboard-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Points Table\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"leaderboard-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Rank\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Team Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Points\"})]})}),/*#__PURE__*/_jsx(AnimatePresence,{children:/*#__PURE__*/_jsx(\"tbody\",{children:sorted.map((team,idx)=>/*#__PURE__*/_jsxs(motion.tr,{initial:{opacity:0,y:-10},animate:{opacity:1,y:0},exit:{opacity:0,y:10},layout:true,className:idx<3?`top-${idx+1}`:'',children:[/*#__PURE__*/_jsxs(\"td\",{children:[idx+1,\" \",idx<3&&/*#__PURE__*/_jsx(\"span\",{className:\"medal\",children:MEDALS[idx]})]}),/*#__PURE__*/_jsx(\"td\",{children:team.name}),/*#__PURE__*/_jsx(\"td\",{children:team.points})]},team._id))})})]})]});}export default Leaderboard;","map":{"version":3,"names":["React","useEffect","useState","motion","AnimatePresence","api","jsx","_jsx","jsxs","_jsxs","MEDALS","Leaderboard","teams","setTeams","fetchTeams","res","get","data","err","console","error","interval","setInterval","clearInterval","sorted","sort","a","b","points","className","children","map","team","idx","tr","initial","opacity","y","animate","exit","layout","name","_id"],"sources":["D:/leaderboard/leaderboaduser/src/components/Leaderboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport api from '../api';\r\nimport './Leaderboard.css';\r\n\r\nconst MEDALS = ['ðŸ¥‡', 'ðŸ¥ˆ', 'ðŸ¥‰'];\r\n\r\nfunction Leaderboard() {\r\n  const [teams, setTeams] = useState([]);\r\n\r\n  const fetchTeams = async () => {\r\n    try {\r\n      const res = await api.get('/teams');\r\n      setTeams(res.data);\r\n    } catch (err) {\r\n      console.error('Error fetching teams:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTeams();\r\n    const interval = setInterval(fetchTeams, 1000); // refresh every 10s\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const sorted = [...teams].sort((a, b) => b.points - a.points);\r\n\r\n  return (\r\n    <div className=\"leaderboard-container\">\r\n      <h2>Points Table</h2>\r\n      <table className=\"leaderboard-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Rank</th>\r\n            <th>Team Name</th>\r\n            <th>Points</th>\r\n          </tr>\r\n        </thead>\r\n        <AnimatePresence>\r\n          <tbody>\r\n            {sorted.map((team, idx) => (\r\n              <motion.tr\r\n                key={team._id}\r\n                initial={{ opacity: 0, y: -10 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: 10 }}\r\n                layout\r\n                className={idx < 3 ? `top-${idx + 1}` : ''}\r\n              >\r\n                <td>\r\n                  {idx + 1} {idx < 3 && <span className=\"medal\">{MEDALS[idx]}</span>}\r\n                </td>\r\n                <td>{team.name}</td>\r\n                <td>{team.points}</td>\r\n              </motion.tr>\r\n            ))}\r\n          </tbody>\r\n        </AnimatePresence>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Leaderboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}